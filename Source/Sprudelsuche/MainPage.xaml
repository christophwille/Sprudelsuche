<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Sprudelsuche.MainPage"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Sprudelsuche"
    xmlns:common="using:Sprudelsuche.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:data="using:Sprudelsuche.Model" 
    xmlns:assets="using:Sprudelsuche.Assets" xmlns:u2u="using:SprudelSuche.ThirdParty.U2U" mc:Ignorable="d">

    <Page.Resources>
        <common:BooleanToVisibilityConverter x:Name="VisibilityConverter" />

        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding GasQueryResults}"
            d:Source="{Binding SuchErgebnisse, Source={d:DesignInstance Type=data:SampleDataSource, IsDesignTimeCreatable=True}}"/>

        <CollectionViewSource
            x:Name="mainpageActionsViewSource"
            Source="{Binding MainPageActions}"
            d:Source="{Binding MainPageActions, Source={d:DesignInstance Type=data:SampleDataSource, IsDesignTimeCreatable=True}}"/>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ProgressBar
                     Visibility="{Binding RefreshInProgress, Converter={StaticResource VisibilityConverter}}"
                     HorizontalAlignment="Center" 
                     VerticalAlignment="Top" 
                     IsIndeterminate="True"  
                     Width="300" />

        <!-- Back button and page title -->
        <Grid Background="{StaticResource AppBackgroundColorBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource SprudelBackButtonStyle}"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Image x:Name="logo" Source="Assets/InAppTopBar.png" Width="150" VerticalAlignment="Center" />
                <TextBlock x:Name="pageTitle" Text="Favoriten" Style="{StaticResource PageHeaderTextStyle}" 
                           Foreground="{StaticResource SprudelWhiteBrush}" />
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="0"/>
                <RowDefinition Height="*"/>
				<RowDefinition Height="56"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
				<ColumnDefinition Width="96"/>
                <ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="116"/>
                <ColumnDefinition Width="*"/>
				<ColumnDefinition Width="86"/>
            </Grid.ColumnDefinitions>

            <u2u:VariableGridView
                Grid.Row="1"
                Grid.Column="1"
                x:Name="commandsGridView"
                AutomationProperties.AutomationId="CommandsGridView"
                AutomationProperties.Name="Items"
                Margin="0,25,0,0"
                SelectionMode="None"
                IsItemClickEnabled="True"
                IsSwipeEnabled="False"
                ItemClick="CommandsGridView_OnItemClick"
                ItemsSource="{Binding Source={StaticResource mainpageActionsViewSource}}" 
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.HorizontalScrollMode="Disabled"
                IsDoubleTapEnabled="False" IsHoldingEnabled="False" IsRightTapEnabled="False">
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Left" Width="{Binding ItemWidth}" Height="150" VariableSizedWrapGrid.ColumnSpan="{Binding Width}">
                            <Border Background="{StaticResource AppBackgroundColorBrush}">
                                <StackPanel VerticalAlignment="Top">
                                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                                    <TextBlock Text="{Binding Description}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
                                </StackPanel>
                            </Border>
                            <StackPanel VerticalAlignment="Bottom">
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>
                <u2u:VariableGridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VariableSizedWrapGrid VerticalAlignment="Top" HorizontalAlignment="Left" 
                                               Orientation="Horizontal"
                                           ItemHeight="150"
                                           ItemWidth="150"
                                           MaximumRowsOrColumns="2" />
                    </ItemsPanelTemplate>
                </u2u:VariableGridView.ItemsPanel>
            </u2u:VariableGridView>

            <!-- Horizontal scrolling grid used in most view states -->
            <GridView
                Grid.Row="1"
                Grid.Column="3"
                x:Name="itemGridView"
                AutomationProperties.AutomationId="ItemsGridView"
                AutomationProperties.Name="Items"
                TabIndex="1"
                Margin="0,25,0,0"
                SelectionMode="Single"
                IsItemClickEnabled="True"
                ItemClick="ItemsControlsItemClick"
                ItemsSource="{Binding Source={StaticResource itemsViewSource}}" 
                SelectedItem="{Binding SelectedGasQueryResult, Mode=TwoWay}"
                IsSynchronizedWithCurrentItem="False"
                SelectionChanged="ItemsControlsSelectionChanged">
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Left" Width="250" Height="250">
                            <Border Background="{Binding FuelType,Converter={StaticResource FuelTypeToBrush}}">
                                <StackPanel VerticalAlignment="Top">
                                    <TextBlock Text="{Binding Name}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                                    <TextBlock Text="{Binding LastUpdatedFormatted}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
                                </StackPanel>
                            </Border>
                            <StackPanel VerticalAlignment="Bottom">
                                <TextBlock Text="{Binding PriceAtCheapestGasStationFormatted}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                                <TextBlock Text="{Binding InfoOnCheapestGasStation}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>

        </Grid>

        <!-- Vertical scrolling list only used when snapped -->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemsListView"
            AutomationProperties.Name="Items"
            TabIndex="1"
            Grid.Row="1"
            Visibility="Collapsed"
            Margin="0,25,0,0"
            Padding="10,0,0,60"
            IsItemClickEnabled="True"
            SelectionMode="Single"
            SelectionChanged="ItemsControlsSelectionChanged"
            ItemClick="ItemsControlsItemClick"
            SelectedItem="{Binding SelectedGasQueryResult, Mode=TwoWay}"
            ItemsSource="{Binding GasQueryResults}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="6">
                        <Border Background="{Binding FuelType,Converter={StaticResource FuelTypeToBrush}}">
                            <StackPanel VerticalAlignment="Top" Margin="10,10,10,10">
                                <TextBlock Text="{Binding Name}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" />
                                <TextBlock Text="{Binding LastUpdatedFormatted}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" />
                                <TextBlock Text="{Binding PriceAtCheapestGasStationFormatted}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" />
                                <TextBlock Text="{Binding InfoOnCheapestGasStation}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" />
                            </StackPanel>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>


        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SprudelPortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="commandsGridView">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<x:Int32>0</x:Int32>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="itemGridView">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<x:Int32>1</x:Int32>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="itemGridView">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<x:Int32>3</x:Int32>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SprudelSnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="logo" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="commandsGridView">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<Visibility>Collapsed</Visibility>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

    <Page.BottomAppBar>
        <AppBar>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="LeftPanel" Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
                    <Button AutomationProperties.Name="Löschen"  x:Name="Delete" Style="{StaticResource DeleteAppBarButtonStyle}" 
                            Visibility="{Binding IsGasQueryResultSelected, Converter={StaticResource VisibilityConverter}}"
                            Tag="Delete" Command="{Binding DeleteSelectedItemCommand, Mode=OneWay}" />
                </StackPanel>
                <StackPanel x:Name="RightPanel" Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                    <Button AutomationProperties.Name="Aktualisieren" x:Name="Refresh" Style="{StaticResource RefreshAppBarButtonStyle}"
                            Visibility="{Binding AreQueryResultsAvailable, Converter={StaticResource VisibilityConverter}}"
                            Tag="Refresh" Command="{Binding RefreshDataCommand, Mode=OneWay}" />
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
</common:LayoutAwarePage>
